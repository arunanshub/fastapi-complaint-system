[tool.poetry]
name = "fastapi-complaint-system"
version = "0.1.0"
description = ""
authors = ["Arunanshu Biswas <mydellpc07@gmail.com>"]
readme = "README.md"
packages = [{include = "app", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.90.0"
sqlmodel = "^0.0.8"
alembic = "^1.9.3"
aiosqlite = "^0.18.0"
uvicorn = {extras = ["standard"], version = "^0.20.0"}
pydantic = {extras = ["dotenv", "email"], version = "^1.10.4"}
passlib = {extras = ["argon2"], version = "^1.7.4"}
pyjwt = "^2.6.0"

[tool.poetry.group.dev.dependencies]
types-passlib = "^1.7.7.8"
mypy = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Extra tools for development
[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
show_error_codes = true

[tool.pycln]
all = true

[tool.black]
line-length = 79
target-verson = "py38"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
line_length = 79
profile = "black"
add_imports = ["from __future__ import annotations"]

[tool.flake8]
extend-ignore = [
    "D203",
    "W503",
    # E203: whitespace before ':'
    "E203",
    "ANN101",
    "ANN102",
    "ANN204",
    # Allow typing.Any in type hints
    "ANN401",
    # Abstract base class with no abstract method.
    "B024",
    # Function call in argument defaults: fastapi.Depends
    "B008",
]
# Use `future ... __annotations__` style type checking
enable-extensions = ["TC", "TC1"]
# typing is a built in module!
type-checking-exempt-modules = "typing"
exclude = [
    # No need to traverse our git directory
    ".git",
    # There's no value in checking cache directories
    "__pycache__",
    # "The conf file is mostly autogenerated", ignore it
    "docs",
    # The old directory contains Flake8 2.0
    "old",
    # This contains our built documentation
    "build",
    # This contains builds of flake8 that we don't want to check
    "dist",
    # Avoid the `.venv` dir created by Poetry
    ".venv",
    # avoid test folder
    "tests"
]
